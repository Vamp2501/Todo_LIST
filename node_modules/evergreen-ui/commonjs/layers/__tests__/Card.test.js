"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _ = require("../..");

var _theme = require("../../theme");

var _Card = _interopRequireDefault(require("../src/Card"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var testText = 'card-test-text';
describe('<Card />', function () {
  it('forwards ref', function () {
    var mockRef = jest.fn();
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Card["default"], {
      ref: mockRef
    }));
    expect(mockRef).toHaveBeenCalled();
  });
  it('passes className', function () {
    var testClass = 'test-class-name';
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Card["default"], {
      className: testClass
    }, testText));
    expect(_react2.screen.getByText(testText)).toHaveClass(testClass);
  });
  it('uses theme values', function () {
    var testTheme = _objectSpread(_objectSpread({}, _.defaultTheme), {}, {
      components: _objectSpread(_objectSpread({}, _.defaultTheme.components), {}, {
        Card: {
          baseStyle: {
            color: 'red',
            background: 'blue',
            borderRadius: 25
          }
        }
      })
    });

    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_theme.ThemeProvider, {
      value: testTheme
    }, /*#__PURE__*/_react["default"].createElement(_Card["default"], null, testText)));
    expect(_react2.screen.getByText(testText)).toHaveStyle('color: red');
    expect(_react2.screen.getByText(testText)).toHaveStyle('background: blue');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-top-left-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-top-right-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-bottom-left-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-bottom-right-radius: 25px');
  });
  it('passes remaining props down', function () {
    var testId = 'test-id';
    var testLabel = 'test-label';
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Card["default"], {
      id: testId,
      "aria-label": testLabel
    }, testText));
    expect(_react2.screen.getByText(testText)).toHaveAttribute('aria-label', testLabel);
    expect(_react2.screen.getByText(testText)).toHaveAttribute('id', testId);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sYXllcnMvX190ZXN0c19fL0NhcmQudGVzdC5qcyJdLCJuYW1lcyI6WyJ0ZXN0VGV4dCIsImRlc2NyaWJlIiwiaXQiLCJtb2NrUmVmIiwiamVzdCIsImZuIiwiZXhwZWN0IiwidG9IYXZlQmVlbkNhbGxlZCIsInRlc3RDbGFzcyIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvSGF2ZUNsYXNzIiwidGVzdFRoZW1lIiwiZGVmYXVsdFRoZW1lIiwiY29tcG9uZW50cyIsIkNhcmQiLCJiYXNlU3R5bGUiLCJjb2xvciIsImJhY2tncm91bmQiLCJib3JkZXJSYWRpdXMiLCJ0b0hhdmVTdHlsZSIsInRlc3RJZCIsInRlc3RMYWJlbCIsInRvSGF2ZUF0dHJpYnV0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLFFBQVEsR0FBRyxnQkFBakI7QUFFQUMsUUFBUSxDQUFDLFVBQUQsRUFBYSxZQUFNO0FBQ3pCQyxFQUFBQSxFQUFFLENBQUMsY0FBRCxFQUFpQixZQUFNO0FBQ3ZCLFFBQU1DLE9BQU8sR0FBR0MsSUFBSSxDQUFDQyxFQUFMLEVBQWhCO0FBQ0Esc0NBQU8sZ0NBQUMsZ0JBQUQ7QUFBTSxNQUFBLEdBQUcsRUFBRUY7QUFBWCxNQUFQO0FBQ0FHLElBQUFBLE1BQU0sQ0FBQ0gsT0FBRCxDQUFOLENBQWdCSSxnQkFBaEI7QUFDRCxHQUpDLENBQUY7QUFNQUwsRUFBQUEsRUFBRSxDQUFDLGtCQUFELEVBQXFCLFlBQU07QUFDM0IsUUFBTU0sU0FBUyxHQUFHLGlCQUFsQjtBQUNBLHNDQUFPLGdDQUFDLGdCQUFEO0FBQU0sTUFBQSxTQUFTLEVBQUVBO0FBQWpCLE9BQTZCUixRQUE3QixDQUFQO0FBQ0FNLElBQUFBLE1BQU0sQ0FBQ0csZUFBT0MsU0FBUCxDQUFpQlYsUUFBakIsQ0FBRCxDQUFOLENBQW1DVyxXQUFuQyxDQUErQ0gsU0FBL0M7QUFDRCxHQUpDLENBQUY7QUFNQU4sRUFBQUEsRUFBRSxDQUFDLG1CQUFELEVBQXNCLFlBQU07QUFDNUIsUUFBTVUsU0FBUyxtQ0FDVkMsY0FEVTtBQUViQyxNQUFBQSxVQUFVLGtDQUNMRCxlQUFhQyxVQURSO0FBRVJDLFFBQUFBLElBQUksRUFBRTtBQUNKQyxVQUFBQSxTQUFTLEVBQUU7QUFDVEMsWUFBQUEsS0FBSyxFQUFFLEtBREU7QUFFVEMsWUFBQUEsVUFBVSxFQUFFLE1BRkg7QUFHVEMsWUFBQUEsWUFBWSxFQUFFO0FBSEw7QUFEUDtBQUZFO0FBRkcsTUFBZjs7QUFjQSxzQ0FDRSxnQ0FBQyxvQkFBRDtBQUFlLE1BQUEsS0FBSyxFQUFFUDtBQUF0QixvQkFDRSxnQ0FBQyxnQkFBRCxRQUFPWixRQUFQLENBREYsQ0FERjtBQU1BTSxJQUFBQSxNQUFNLENBQUNHLGVBQU9DLFNBQVAsQ0FBaUJWLFFBQWpCLENBQUQsQ0FBTixDQUFtQ29CLFdBQW5DLENBQStDLFlBQS9DO0FBQ0FkLElBQUFBLE1BQU0sQ0FBQ0csZUFBT0MsU0FBUCxDQUFpQlYsUUFBakIsQ0FBRCxDQUFOLENBQW1Db0IsV0FBbkMsQ0FBK0Msa0JBQS9DO0FBQ0FkLElBQUFBLE1BQU0sQ0FBQ0csZUFBT0MsU0FBUCxDQUFpQlYsUUFBakIsQ0FBRCxDQUFOLENBQW1Db0IsV0FBbkMsQ0FBK0MsOEJBQS9DO0FBQ0FkLElBQUFBLE1BQU0sQ0FBQ0csZUFBT0MsU0FBUCxDQUFpQlYsUUFBakIsQ0FBRCxDQUFOLENBQW1Db0IsV0FBbkMsQ0FBK0MsK0JBQS9DO0FBQ0FkLElBQUFBLE1BQU0sQ0FBQ0csZUFBT0MsU0FBUCxDQUFpQlYsUUFBakIsQ0FBRCxDQUFOLENBQW1Db0IsV0FBbkMsQ0FBK0MsaUNBQS9DO0FBQ0FkLElBQUFBLE1BQU0sQ0FBQ0csZUFBT0MsU0FBUCxDQUFpQlYsUUFBakIsQ0FBRCxDQUFOLENBQW1Db0IsV0FBbkMsQ0FBK0Msa0NBQS9DO0FBQ0QsR0EzQkMsQ0FBRjtBQTZCQWxCLEVBQUFBLEVBQUUsQ0FBQyw2QkFBRCxFQUFnQyxZQUFNO0FBQ3RDLFFBQU1tQixNQUFNLEdBQUcsU0FBZjtBQUNBLFFBQU1DLFNBQVMsR0FBRyxZQUFsQjtBQUVBLHNDQUNFLGdDQUFDLGdCQUFEO0FBQU0sTUFBQSxFQUFFLEVBQUVELE1BQVY7QUFBa0Isb0JBQVlDO0FBQTlCLE9BQ0d0QixRQURILENBREY7QUFLQU0sSUFBQUEsTUFBTSxDQUFDRyxlQUFPQyxTQUFQLENBQWlCVixRQUFqQixDQUFELENBQU4sQ0FBbUN1QixlQUFuQyxDQUFtRCxZQUFuRCxFQUFpRUQsU0FBakU7QUFDQWhCLElBQUFBLE1BQU0sQ0FBQ0csZUFBT0MsU0FBUCxDQUFpQlYsUUFBakIsQ0FBRCxDQUFOLENBQW1DdUIsZUFBbkMsQ0FBbUQsSUFBbkQsRUFBeURGLE1BQXpEO0FBQ0QsR0FYQyxDQUFGO0FBWUQsQ0F0RE8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcbmltcG9ydCB7IGRlZmF1bHRUaGVtZSB9IGZyb20gJy4uLy4uJ1xuaW1wb3J0IHsgVGhlbWVQcm92aWRlciB9IGZyb20gJy4uLy4uL3RoZW1lJ1xuaW1wb3J0IENhcmQgZnJvbSAnLi4vc3JjL0NhcmQnXG5cbmNvbnN0IHRlc3RUZXh0ID0gJ2NhcmQtdGVzdC10ZXh0J1xuXG5kZXNjcmliZSgnPENhcmQgLz4nLCAoKSA9PiB7XG4gIGl0KCdmb3J3YXJkcyByZWYnLCAoKSA9PiB7XG4gICAgY29uc3QgbW9ja1JlZiA9IGplc3QuZm4oKVxuICAgIHJlbmRlcig8Q2FyZCByZWY9e21vY2tSZWZ9IC8+KVxuICAgIGV4cGVjdChtb2NrUmVmKS50b0hhdmVCZWVuQ2FsbGVkKClcbiAgfSlcblxuICBpdCgncGFzc2VzIGNsYXNzTmFtZScsICgpID0+IHtcbiAgICBjb25zdCB0ZXN0Q2xhc3MgPSAndGVzdC1jbGFzcy1uYW1lJ1xuICAgIHJlbmRlcig8Q2FyZCBjbGFzc05hbWU9e3Rlc3RDbGFzc30+e3Rlc3RUZXh0fTwvQ2FyZD4pXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQodGVzdFRleHQpKS50b0hhdmVDbGFzcyh0ZXN0Q2xhc3MpXG4gIH0pXG5cbiAgaXQoJ3VzZXMgdGhlbWUgdmFsdWVzJywgKCkgPT4ge1xuICAgIGNvbnN0IHRlc3RUaGVtZSA9IHtcbiAgICAgIC4uLmRlZmF1bHRUaGVtZSxcbiAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgLi4uZGVmYXVsdFRoZW1lLmNvbXBvbmVudHMsXG4gICAgICAgIENhcmQ6IHtcbiAgICAgICAgICBiYXNlU3R5bGU6IHtcbiAgICAgICAgICAgIGNvbG9yOiAncmVkJyxcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICdibHVlJyxcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogMjVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoXG4gICAgICA8VGhlbWVQcm92aWRlciB2YWx1ZT17dGVzdFRoZW1lfT5cbiAgICAgICAgPENhcmQ+e3Rlc3RUZXh0fTwvQ2FyZD5cbiAgICAgIDwvVGhlbWVQcm92aWRlcj5cbiAgICApXG5cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCh0ZXN0VGV4dCkpLnRvSGF2ZVN0eWxlKCdjb2xvcjogcmVkJylcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCh0ZXN0VGV4dCkpLnRvSGF2ZVN0eWxlKCdiYWNrZ3JvdW5kOiBibHVlJylcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCh0ZXN0VGV4dCkpLnRvSGF2ZVN0eWxlKCdib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyNXB4JylcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCh0ZXN0VGV4dCkpLnRvSGF2ZVN0eWxlKCdib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMjVweCcpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQodGVzdFRleHQpKS50b0hhdmVTdHlsZSgnYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMjVweCcpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQodGVzdFRleHQpKS50b0hhdmVTdHlsZSgnYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDI1cHgnKVxuICB9KVxuXG4gIGl0KCdwYXNzZXMgcmVtYWluaW5nIHByb3BzIGRvd24nLCAoKSA9PiB7XG4gICAgY29uc3QgdGVzdElkID0gJ3Rlc3QtaWQnXG4gICAgY29uc3QgdGVzdExhYmVsID0gJ3Rlc3QtbGFiZWwnXG5cbiAgICByZW5kZXIoXG4gICAgICA8Q2FyZCBpZD17dGVzdElkfSBhcmlhLWxhYmVsPXt0ZXN0TGFiZWx9PlxuICAgICAgICB7dGVzdFRleHR9XG4gICAgICA8L0NhcmQ+XG4gICAgKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KHRlc3RUZXh0KSkudG9IYXZlQXR0cmlidXRlKCdhcmlhLWxhYmVsJywgdGVzdExhYmVsKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KHRlc3RUZXh0KSkudG9IYXZlQXR0cmlidXRlKCdpZCcsIHRlc3RJZClcbiAgfSlcbn0pXG4iXX0=
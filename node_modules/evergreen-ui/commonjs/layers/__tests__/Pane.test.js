"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _ = require("../..");

var _theme = require("../../theme");

var _Pane = _interopRequireDefault(require("../src/Pane"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var testText = 'pane-test-text';
describe('<Pane />', function () {
  it('forwards ref', function () {
    var mockRef = jest.fn();
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Pane["default"], {
      ref: mockRef
    }));
    expect(mockRef).toHaveBeenCalled();
  });
  it('passes className', function () {
    var testClass = 'test-class-name';
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Pane["default"], {
      className: testClass
    }, testText));
    expect(_react2.screen.getByText(testText)).toHaveClass(testClass);
  });
  it('uses elevation', function () {
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Pane["default"], {
      elevation: 1
    }, testText));
    expect(_react2.screen.getByText(testText)).toHaveStyle('box-shadow: 0 0 1px rgba(67, 90, 111, 0.3), 0 2px 4px -2px rgba(67, 90, 111, 0.47)');
  });
  it('uses theme values', function () {
    var testTheme = _objectSpread(_objectSpread({}, _.defaultTheme), {}, {
      components: _objectSpread(_objectSpread({}, _.defaultTheme.components), {}, {
        Pane: {
          baseStyle: function baseStyle(theme, props) {
            return {
              color: 'red',
              background: 'blue',
              borderRadius: 25,
              boxShadow: theme.shadows[props.elevation]
            };
          }
        }
      }),
      shadows: ['0px 0px 50px 0px #00000', '0px 0px 50px 20px #00000']
    });

    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_theme.ThemeProvider, {
      value: testTheme
    }, /*#__PURE__*/_react["default"].createElement(_Pane["default"], {
      elevation: 1
    }, testText)));
    expect(_react2.screen.getByText(testText)).toHaveStyle('color: red');
    expect(_react2.screen.getByText(testText)).toHaveStyle('background: blue');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-top-left-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-top-right-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-bottom-left-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-bottom-right-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('box-shadow: 0px 0px 50px 20px #00000');
  });
  it('passes remaining props down', function () {
    var testId = 'test-id';
    var testLabel = 'test-label';
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Pane["default"], {
      id: testId,
      "aria-label": testLabel
    }, testText));
    expect(_react2.screen.getByText(testText)).toHaveAttribute('aria-label', testLabel);
    expect(_react2.screen.getByText(testText)).toHaveAttribute('id', testId);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sYXllcnMvX190ZXN0c19fL1BhbmUudGVzdC5qcyJdLCJuYW1lcyI6WyJ0ZXN0VGV4dCIsImRlc2NyaWJlIiwiaXQiLCJtb2NrUmVmIiwiamVzdCIsImZuIiwiZXhwZWN0IiwidG9IYXZlQmVlbkNhbGxlZCIsInRlc3RDbGFzcyIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvSGF2ZUNsYXNzIiwidG9IYXZlU3R5bGUiLCJ0ZXN0VGhlbWUiLCJkZWZhdWx0VGhlbWUiLCJjb21wb25lbnRzIiwiUGFuZSIsImJhc2VTdHlsZSIsInRoZW1lIiwicHJvcHMiLCJjb2xvciIsImJhY2tncm91bmQiLCJib3JkZXJSYWRpdXMiLCJib3hTaGFkb3ciLCJzaGFkb3dzIiwiZWxldmF0aW9uIiwidGVzdElkIiwidGVzdExhYmVsIiwidG9IYXZlQXR0cmlidXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLGdCQUFqQjtBQUVBQyxRQUFRLENBQUMsVUFBRCxFQUFhLFlBQU07QUFDekJDLEVBQUFBLEVBQUUsQ0FBQyxjQUFELEVBQWlCLFlBQU07QUFDdkIsUUFBTUMsT0FBTyxHQUFHQyxJQUFJLENBQUNDLEVBQUwsRUFBaEI7QUFDQSxzQ0FBTyxnQ0FBQyxnQkFBRDtBQUFNLE1BQUEsR0FBRyxFQUFFRjtBQUFYLE1BQVA7QUFDQUcsSUFBQUEsTUFBTSxDQUFDSCxPQUFELENBQU4sQ0FBZ0JJLGdCQUFoQjtBQUNELEdBSkMsQ0FBRjtBQU1BTCxFQUFBQSxFQUFFLENBQUMsa0JBQUQsRUFBcUIsWUFBTTtBQUMzQixRQUFNTSxTQUFTLEdBQUcsaUJBQWxCO0FBQ0Esc0NBQU8sZ0NBQUMsZ0JBQUQ7QUFBTSxNQUFBLFNBQVMsRUFBRUE7QUFBakIsT0FBNkJSLFFBQTdCLENBQVA7QUFDQU0sSUFBQUEsTUFBTSxDQUFDRyxlQUFPQyxTQUFQLENBQWlCVixRQUFqQixDQUFE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dGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnXG5pbXBvcnQgeyBkZWZhdWx0VGhlbWUgfSBmcm9tICcuLi8uLidcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICcuLi8uLi90aGVtZSdcbmltcG9ydCBQYW5lIGZyb20gJy4uL3NyYy9QYW5lJ1xuXG5jb25zdCB0ZXN0VGV4dCA9ICdwYW5lLXRlc3QtdGV4dCdcblxuZGVzY3JpYmUoJzxQYW5lIC8+JywgKCkgPT4ge1xuICBpdCgnZm9yd2FyZHMgcmVmJywgKCkgPT4ge1xuICAgIGNvbnN0IG1vY2tSZWYgPSBqZXN0LmZuKClcbiAgICByZW5kZXIoPFBhbmUgcmVmPXttb2NrUmVmfSAvPilcbiAgICBleHBlY3QobW9ja1JlZikudG9IYXZlQmVlbkNhbGxlZCgpXG4gIH0pXG5cbiAgaXQoJ3Bhc3NlcyBjbGFzc05hbWUnLCAoKSA9PiB7XG4gICAgY29uc3QgdGVzdENsYXNzID0gJ3Rlc3QtY2xhc3MtbmFtZSdcbiAgICByZW5kZXIoPFBhbmUgY2xhc3NOYW1lPXt0ZXN0Q2xhc3N9Pnt0ZXN0VGV4dH08L1BhbmU+KVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KHRlc3RUZXh0KSkudG9IYXZlQ2xhc3ModGVzdENsYXNzKVxuICB9KVxuXG4gIGl0KCd1c2VzIGVsZXZhdGlvbicsICgpID0+IHtcbiAgICByZW5kZXIoPFBhbmUgZWxldmF0aW9uPXsxfT57dGVzdFRleHR9PC9QYW5lPilcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KHRlc3RUZXh0KSkudG9IYXZlU3R5bGUoXG4gICAgICAnYm94LXNoYWRvdzogMCAwIDFweCByZ2JhKDY3LCA5MCwgMTExLCAwLjMpLCAwIDJweCA0cHggLTJweCByZ2JhKDY3LCA5MCwgMTExLCAwLjQ3KSdcbiAgICApXG4gIH0pXG5cbiAgaXQoJ3VzZXMgdGhlbWUgdmFsdWVzJywgKCkgPT4ge1xuICAgIGNvbnN0IHRlc3RUaGVtZSA9IHtcbiAgICAgIC4uLmRlZmF1bHRUaGVtZSxcbiAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgLi4uZGVmYXVsdFRoZW1lLmNvbXBvbmVudHMsXG4gICAgICAgIFBhbmU6IHtcbiAgICAgICAgICBiYXNlU3R5bGU6ICh0aGVtZSwgcHJvcHMpID0+ICh7XG4gICAgICAgICAgICBjb2xvcjogJ3JlZCcsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAnYmx1ZScsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6IDI1LFxuICAgICAgICAgICAgYm94U2hhZG93OiB0aGVtZS5zaGFkb3dzW3Byb3BzLmVsZXZhdGlvbl1cbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc2hhZG93czogWycwcHggMHB4IDUwcHggMHB4ICMwMDAwMCcsICcwcHggMHB4IDUwcHggMjBweCAjMDAwMDAnXVxuICAgIH1cblxuICAgIHJlbmRlcihcbiAgICAgIDxUaGVtZVByb3ZpZGVyIHZhbHVlPXt0ZXN0VGhlbWV9PlxuICAgICAgICA8UGFuZSBlbGV2YXRpb249ezF9Pnt0ZXN0VGV4dH08L1BhbmU+XG4gICAgICA8L1RoZW1lUHJvdmlkZXI+XG4gICAgKVxuXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQodGVzdFRleHQpKS50b0hhdmVTdHlsZSgnY29sb3I6IHJlZCcpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQodGVzdFRleHQpKS50b0hhdmVTdHlsZSgnYmFja2dyb3VuZDogYmx1ZScpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQodGVzdFRleHQpKS50b0hhdmVTdHlsZSgnYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMjVweCcpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQodGVzdFRleHQpKS50b0hhdmVTdHlsZSgnYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDI1cHgnKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KHRlc3RUZXh0KSkudG9IYXZlU3R5bGUoJ2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDI1cHgnKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KHRlc3RUZXh0KSkudG9IYXZlU3R5bGUoJ2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAyNXB4JylcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCh0ZXN0VGV4dCkpLnRvSGF2ZVN0eWxlKCdib3gtc2hhZG93OiAwcHggMHB4IDUwcHggMjBweCAjMDAwMDAnKVxuICB9KVxuXG4gIGl0KCdwYXNzZXMgcmVtYWluaW5nIHByb3BzIGRvd24nLCAoKSA9PiB7XG4gICAgY29uc3QgdGVzdElkID0gJ3Rlc3QtaWQnXG4gICAgY29uc3QgdGVzdExhYmVsID0gJ3Rlc3QtbGFiZWwnXG5cbiAgICByZW5kZXIoXG4gICAgICA8UGFuZSBpZD17dGVzdElkfSBhcmlhLWxhYmVsPXt0ZXN0TGFiZWx9PlxuICAgICAgICB7dGVzdFRleHR9XG4gICAgICA8L1BhbmU+XG4gICAgKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KHRlc3RUZXh0KSkudG9IYXZlQXR0cmlidXRlKCdhcmlhLWxhYmVsJywgdGVzdExhYmVsKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KHRlc3RUZXh0KSkudG9IYXZlQXR0cmlidXRlKCdpZCcsIHRlc3RJZClcbiAgfSlcbn0pXG4iXX0=
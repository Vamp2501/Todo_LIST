"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get = get;
exports.getValue = getValue;
exports.mergeTheme = mergeTheme;
exports.resolveThemeTokens = resolveThemeTokens;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _lodash = _interopRequireDefault(require("lodash.merge"));

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function get(obj, path, fallback) {
  var keys = path && path.split ? path.split('.') : [path];
  var value = obj;

  var _iterator = _createForOfIteratorHelper(keys),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var key = _step.value;
      value = value ? value[key] : undefined;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return value === undefined ? fallback : value;
}
/**
 * Gets a value from the given theme based on a path when present,
 * else returns the provided value
 * @param {object} theme
 * @param {unknown} pathOrValue
 */


function getValue(theme, pathOrValue) {
  return get(theme, pathOrValue, pathOrValue);
}
/**
 * Adds or overrides theme values on top of an existing theme object
 * @param destinationTheme Theme object to merge on top of
 * @param sourceTheme Theme object that adds or overrides values
 */


function mergeTheme(destinationTheme, sourceTheme) {
  return (0, _lodash["default"])({}, destinationTheme, sourceTheme);
}
/**
 * Resolves an object (or style config) when referencing theme paths
 * It will preserve the original object structure (nesting)
 * @param {object} theme
 * @param {object} obj
 * @returns {object} a new object with theme-resolved properties
 */


function resolveThemeTokens(theme, obj) {
  var result = {};

  for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];
    var raw = obj[key];

    if (raw === null) {
      continue;
    }

    if ((0, _typeof2["default"])(raw) === 'object') {
      result[key] = resolveThemeTokens(theme, raw);
    } else {
      result[key] = getValue(theme, raw);
    }
  }

  return result;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90aGVtZS9zcmMvdGhlbWUtdG9vbHMuanMiXSwibmFtZXMiOlsiZ2V0Iiwib2JqIiwicGF0aCIsImZhbGxiYWNrIiwia2V5cyIsInNwbGl0IiwidmFsdWUiLCJrZXkiLCJ1bmRlZmluZWQiLCJnZXRWYWx1ZSIsInRoZW1lIiwicGF0aE9yVmFsdWUiLCJtZXJnZVRoZW1lIiwiZGVzdGluYXRpb25UaGVtZSIsInNvdXJjZVRoZW1lIiwicmVzb2x2ZVRoZW1lVG9rZW5zIiwicmVzdWx0IiwiT2JqZWN0IiwicmF3Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7OztBQUVPLFNBQVNBLEdBQVQsQ0FBYUMsR0FBYixFQUFrQkMsSUFBbEIsRUFBd0JDLFFBQXhCLEVBQWtDO0FBQ3ZDLE1BQU1DLElBQUksR0FBR0YsSUFBSSxJQUFJQSxJQUFJLENBQUNHLEtBQWIsR0FBcUJILElBQUksQ0FBQ0csS0FBTCxDQUFXLEdBQVgsQ0FBckIsR0FBdUMsQ0FBQ0gsSUFBRCxDQUFwRDtBQUVBLE1BQUlJLEtBQUssR0FBR0wsR0FBWjs7QUFIdUMsNkNBSXJCRyxJQUpxQjtBQUFBOztBQUFBO0FBSXZDLHdEQUF3QjtBQUFBLFVBQWJHLEdBQWE7QUFDdEJELE1BQUFBLEtBQUssR0FBR0EsS0FBSyxHQUFHQSxLQUFLLENBQUNDLEdBQUQsQ0FBUixHQUFnQkMsU0FBN0I7QUFDRDtBQU5zQztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVF2QyxTQUFPRixLQUFLLEtBQUtFLFNBQVYsR0FBc0JMLFFBQXRCLEdBQWlDRyxLQUF4QztBQUNEO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDTyxTQUFTRyxRQUFULENBQWtCQyxLQUFsQixFQUF5QkMsV0FBekIsRUFBc0M7QUFDM0MsU0FBT1gsR0FBRyxDQUFDVSxLQUFELEVBQVFDLFdBQVIsRUFBcUJBLFdBQXJCLENBQVY7QUFDRDtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNPLFNBQVNDLFVBQVQsQ0FBb0JDLGdCQUFwQixFQUFzQ0MsV0FBdEMsRUFBbUQ7QUFDeEQsU0FBTyx3QkFBTSxFQUFOLEVBQVVELGdCQUFWLEVBQTRCQyxXQUE1QixDQUFQO0FBQ0Q7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ08sU0FBU0Msa0JBQVQsQ0FBNEJMLEtBQTVCLEVBQW1DVCxHQUFuQyxFQUF3QztBQUM3QyxNQUFNZSxNQUFNLEdBQUcsRUFBZjs7QUFFQSxrQ0FBa0JDLE1BQU0sQ0FBQ2IsSUFBUCxDQUFZSCxHQUFaLENBQWxCLGtDQUFvQztBQUEvQixRQUFNTSxHQUFHLG1CQUFUO0FBQ0gsUUFBTVcsR0FBRyxHQUFHakIsR0FBRyxDQUFDTSxHQUFELENBQWY7O0FBRUEsUUFBSVcsR0FBRyxLQUFLLElBQVosRUFBa0I7QUFDaEI7QUFDRDs7QUFFRCxRQUFJLHlCQUFPQSxHQUFQLE1BQWUsUUFBbkIsRUFBNkI7QUFDM0JGLE1BQUFBLE1BQU0sQ0FBQ1QsR0FBRCxDQUFOLEdBQWNRLGtCQUFrQixDQUFDTCxLQUFELEVBQVFRLEdBQVIsQ0FBaEM7QUFDRCxLQUZELE1BRU87QUFDTEYsTUFBQUEsTUFBTSxDQUFDVCxHQUFELENBQU4sR0FBY0UsUUFBUSxDQUFDQyxLQUFELEVBQVFRLEdBQVIsQ0FBdEI7QUFDRDtBQUNGOztBQUVELFNBQU9GLE1BQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtZXJnZSBmcm9tICdsb2Rhc2gubWVyZ2UnXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXQob2JqLCBwYXRoLCBmYWxsYmFjaykge1xuICBjb25zdCBrZXlzID0gcGF0aCAmJiBwYXRoLnNwbGl0ID8gcGF0aC5zcGxpdCgnLicpIDogW3BhdGhdXG5cbiAgbGV0IHZhbHVlID0gb2JqXG4gIGZvciAoY29uc3Qga2V5IG9mIGtleXMpIHtcbiAgICB2YWx1ZSA9IHZhbHVlID8gdmFsdWVba2V5XSA6IHVuZGVmaW5lZFxuICB9XG5cbiAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPyBmYWxsYmFjayA6IHZhbHVlXG59XG5cbi8qKlxuICogR2V0cyBhIHZhbHVlIGZyb20gdGhlIGdpdmVuIHRoZW1lIGJhc2VkIG9uIGEgcGF0aCB3aGVuIHByZXNlbnQsXG4gKiBlbHNlIHJldHVybnMgdGhlIHByb3ZpZGVkIHZhbHVlXG4gKiBAcGFyYW0ge29iamVjdH0gdGhlbWVcbiAqIEBwYXJhbSB7dW5rbm93bn0gcGF0aE9yVmFsdWVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFZhbHVlKHRoZW1lLCBwYXRoT3JWYWx1ZSkge1xuICByZXR1cm4gZ2V0KHRoZW1lLCBwYXRoT3JWYWx1ZSwgcGF0aE9yVmFsdWUpXG59XG5cbi8qKlxuICogQWRkcyBvciBvdmVycmlkZXMgdGhlbWUgdmFsdWVzIG9uIHRvcCBvZiBhbiBleGlzdGluZyB0aGVtZSBvYmplY3RcbiAqIEBwYXJhbSBkZXN0aW5hdGlvblRoZW1lIFRoZW1lIG9iamVjdCB0byBtZXJnZSBvbiB0b3Agb2ZcbiAqIEBwYXJhbSBzb3VyY2VUaGVtZSBUaGVtZSBvYmplY3QgdGhhdCBhZGRzIG9yIG92ZXJyaWRlcyB2YWx1ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlVGhlbWUoZGVzdGluYXRpb25UaGVtZSwgc291cmNlVGhlbWUpIHtcbiAgcmV0dXJuIG1lcmdlKHt9LCBkZXN0aW5hdGlvblRoZW1lLCBzb3VyY2VUaGVtZSlcbn1cblxuLyoqXG4gKiBSZXNvbHZlcyBhbiBvYmplY3QgKG9yIHN0eWxlIGNvbmZpZykgd2hlbiByZWZlcmVuY2luZyB0aGVtZSBwYXRoc1xuICogSXQgd2lsbCBwcmVzZXJ2ZSB0aGUgb3JpZ2luYWwgb2JqZWN0IHN0cnVjdHVyZSAobmVzdGluZylcbiAqIEBwYXJhbSB7b2JqZWN0fSB0aGVtZVxuICogQHBhcmFtIHtvYmplY3R9IG9ialxuICogQHJldHVybnMge29iamVjdH0gYSBuZXcgb2JqZWN0IHdpdGggdGhlbWUtcmVzb2x2ZWQgcHJvcGVydGllc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVRoZW1lVG9rZW5zKHRoZW1lLCBvYmopIHtcbiAgY29uc3QgcmVzdWx0ID0ge31cblxuICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhvYmopKSB7XG4gICAgY29uc3QgcmF3ID0gb2JqW2tleV1cblxuICAgIGlmIChyYXcgPT09IG51bGwpIHtcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByYXcgPT09ICdvYmplY3QnKSB7XG4gICAgICByZXN1bHRba2V5XSA9IHJlc29sdmVUaGVtZVRva2Vucyh0aGVtZSwgcmF3KVxuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHRba2V5XSA9IGdldFZhbHVlKHRoZW1lLCByYXcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuIl19
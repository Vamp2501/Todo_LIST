import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useCallback, useState } from 'react';
import PropTypes from 'prop-types';
import Positions from '../../constants/src/Position';
import { Pane } from '../../layers';
import warning from '../../lib/warning';
import { Popover } from '../../popover';
import { minorScale } from '../../scales';
import { Text } from '../../typography';
import { Pulsar } from './Pulsar';
export var Nudge = function Nudge(_ref) {
  var children = _ref.children,
      _ref$isShown = _ref.isShown,
      isShown = _ref$isShown === void 0 ? false : _ref$isShown,
      _ref$position = _ref.position,
      position = _ref$position === void 0 ? Positions.TOP_RIGHT : _ref$position,
      size = _ref.size,
      tooltipContentProp = _ref.tooltipContent,
      onClick = _ref.onClick;

  if (process.env.NODE_ENV !== 'production') {
    warning(true, '<Nudge> is deprecated and will be renamed to Pulsar in the next major version of Evergreen.');
  }

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isHovered = _useState2[0],
      setIsHovered = _useState2[1];

  var handleMouseEnter = useCallback(function () {
    return setIsHovered(true);
  }, [setIsHovered]);
  var handleMouseLeave = useCallback(function () {
    return setIsHovered(false);
  }, [setIsHovered]);
  var isTooltipContentString = typeof tooltipContentProp === 'string';
  var innerContent = isTooltipContentString ? /*#__PURE__*/React.createElement(Text, null, tooltipContentProp) : tooltipContentProp;
  var tooltipContent = /*#__PURE__*/React.createElement(Pane, {
    maxWidth: 240,
    padding: isTooltipContentString ? minorScale(2) : undefined
  }, innerContent);
  return /*#__PURE__*/React.createElement(Popover, {
    content: tooltipContent,
    position: position,
    isShown: isShown && isHovered && !!tooltipContentProp,
    trigger: "hover",
    onOpen: handleMouseEnter,
    maxWidth: 240
  }, /*#__PURE__*/React.createElement(Pane, {
    position: "relative",
    onMouseLeave: handleMouseLeave
  }, isShown && /*#__PURE__*/React.createElement(Pulsar, {
    onClick: onClick,
    position: position,
    size: size
  }), children));
};
Nudge.displayName = "Nudge";
Nudge.propTypes = {
  /**
   * The position for the Pulsar and the Tooltip
   */
  position: PropTypes.oneOf([Positions.TOP_LEFT, Positions.TOP_RIGHT, Positions.BOTTOM_LEFT, Positions.BOTTOM_RIGHT]),

  /**
   * Size of the Pulsar
   */
  size: Pulsar.propTypes.size,

  /**
   * Wether or not the Pulsar/Tooltip is shown
   */
  isShown: PropTypes.bool,

  /**
   * Content for the tooltip
   */
  tooltipContent: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),

  /**
   * Content for the pulsar/tooltip to be anchored too
   */
  children: PropTypes.node,

  /**
   * Called when the Pulsar is clicked
   */
  onClick: PropTypes.func
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wdWxzYXIvc3JjL051ZGdlLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlQ2FsbGJhY2siLCJ1c2VTdGF0ZSIsIlByb3BUeXBlcyIsIlBvc2l0aW9ucyIsIlBhbmUiLCJ3YXJuaW5nIiwiUG9wb3ZlciIsIm1pbm9yU2NhbGUiLCJUZXh0IiwiUHVsc2FyIiwiTnVkZ2UiLCJjaGlsZHJlbiIsImlzU2hvd24iLCJwb3NpdGlvbiIsIlRPUF9SSUdIVCIsInNpemUiLCJ0b29sdGlwQ29udGVudFByb3AiLCJ0b29sdGlwQ29udGVudCIsIm9uQ2xpY2siLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJpc0hvdmVyZWQiLCJzZXRJc0hvdmVyZWQiLCJoYW5kbGVNb3VzZUVudGVyIiwiaGFuZGxlTW91c2VMZWF2ZSIsImlzVG9vbHRpcENvbnRlbnRTdHJpbmciLCJpbm5lckNvbnRlbnQiLCJ1bmRlZmluZWQiLCJwcm9wVHlwZXMiLCJvbmVPZiIsIlRPUF9MRUZUIiwiQk9UVE9NX0xFRlQiLCJCT1RUT01fUklHSFQiLCJib29sIiwib25lT2ZUeXBlIiwibm9kZSIsImZ1bmMiXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxXQUFoQixFQUE2QkMsUUFBN0IsUUFBNkMsT0FBN0M7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQiw4QkFBdEI7QUFDQSxTQUFTQyxJQUFULFFBQXFCLGNBQXJCO0FBQ0EsT0FBT0MsT0FBUCxNQUFvQixtQkFBcEI7QUFDQSxTQUFTQyxPQUFULFFBQXdCLGVBQXhCO0FBQ0EsU0FBU0MsVUFBVCxRQUEyQixjQUEzQjtBQUNBLFNBQVNDLElBQVQsUUFBcUIsa0JBQXJCO0FBQ0EsU0FBU0MsTUFBVCxRQUF1QixVQUF2QjtBQUVBLE9BQU8sSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQVEsT0FPZjtBQUFBLE1BTkpDLFFBTUksUUFOSkEsUUFNSTtBQUFBLDBCQUxK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QmhCO0FBQ0Y7QUFDQTtBQUNFbEIsRUFBQUEsT0FBTyxFQUFFaEIsU0FBUyxDQUFDbUM7QUE3QkgsQ0FBbEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUG9zaXRpb25zIGZyb20gJy4uLy4uL2NvbnN0YW50cy9zcmMvUG9zaXRpb24nXG5pbXBvcnQgeyBQYW5lIH0gZnJvbSAnLi4vLi4vbGF5ZXJzJ1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnLi4vLi4vbGliL3dhcm5pbmcnXG5pbXBvcnQgeyBQb3BvdmVyIH0gZnJvbSAnLi4vLi4vcG9wb3ZlcidcbmltcG9ydCB7IG1pbm9yU2NhbGUgfSBmcm9tICcuLi8uLi9zY2FsZXMnXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vLi4vdHlwb2dyYXBoeSdcbmltcG9ydCB7IFB1bHNhciB9IGZyb20gJy4vUHVsc2FyJ1xuXG5leHBvcnQgY29uc3QgTnVkZ2UgPSAoe1xuICBjaGlsZHJlbixcbiAgaXNTaG93biA9IGZhbHNlLFxuICBwb3NpdGlvbiA9IFBvc2l0aW9ucy5UT1BfUklHSFQsXG4gIHNpemUsXG4gIHRvb2x0aXBDb250ZW50OiB0b29sdGlwQ29udGVudFByb3AsXG4gIG9uQ2xpY2tcbn0pID0+IHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB3YXJuaW5nKHRydWUsICc8TnVkZ2U+IGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVuYW1lZCB0byBQdWxzYXIgaW4gdGhlIG5leHQgbWFqb3IgdmVyc2lvbiBvZiBFdmVyZ3JlZW4uJylcbiAgfVxuXG4gIGNvbnN0IFtpc0hvdmVyZWQsIHNldElzSG92ZXJlZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgaGFuZGxlTW91c2VFbnRlciA9IHVzZUNhbGxiYWNrKCgpID0+IHNldElzSG92ZXJlZCh0cnVlKSwgW3NldElzSG92ZXJlZF0pXG4gIGNvbnN0IGhhbmRsZU1vdXNlTGVhdmUgPSB1c2VDYWxsYmFjaygoKSA9PiBzZXRJc0hvdmVyZWQoZmFsc2UpLCBbc2V0SXNIb3ZlcmVkXSlcblxuICBjb25zdCBpc1Rvb2x0aXBDb250ZW50U3RyaW5nID0gdHlwZW9mIHRvb2x0aXBDb250ZW50UHJvcCA9PT0gJ3N0cmluZydcbiAgY29uc3QgaW5uZXJDb250ZW50ID0gaXNUb29sdGlwQ29udGVudFN0cmluZyA/IDxUZXh0Pnt0b29sdGlwQ29udGVudFByb3B9PC9UZXh0PiA6IHRvb2x0aXBDb250ZW50UHJvcFxuICBjb25zdCB0b29sdGlwQ29udGVudCA9IChcbiAgICA8UGFuZSBtYXhXaWR0aD17MjQwfSBwYWRkaW5nPXtpc1Rvb2x0aXBDb250ZW50U3RyaW5nID8gbWlub3JTY2FsZSgyKSA6IHVuZGVmaW5lZH0+XG4gICAgICB7aW5uZXJDb250ZW50fVxuICAgIDwvUGFuZT5cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPFBvcG92ZXJcbiAgICAgIGNvbnRlbnQ9e3Rvb2x0aXBDb250ZW50fVxuICAgICAgcG9zaXRpb249e3Bvc2l0aW9ufVxuICAgICAgaXNTaG93bj17aXNTaG93biAmJiBpc0hvdmVyZWQgJiYgISF0b29sdGlwQ29udGVudFByb3B9XG4gICAgICB0cmlnZ2VyPVwiaG92ZXJcIlxuICAgICAgb25PcGVuPXtoYW5kbGVNb3VzZUVudGVyfVxuICAgICAgbWF4V2lkdGg9ezI0MH1cbiAgICA+XG4gICAgICA8UGFuZSBwb3NpdGlvbj1cInJlbGF0aXZlXCIgb25Nb3VzZUxlYXZlPXtoYW5kbGVNb3VzZUxlYXZlfT5cbiAgICAgICAge2lzU2hvd24gJiYgPFB1bHNhciBvbkNsaWNrPXtvbkNsaWNrfSBwb3NpdGlvbj17cG9zaXRpb259IHNpemU9e3NpemV9IC8+fVxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1BhbmU+XG4gICAgPC9Qb3BvdmVyPlxuICApXG59XG5cbk51ZGdlLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBwb3NpdGlvbiBmb3IgdGhlIFB1bHNhciBhbmQgdGhlIFRvb2x0aXBcbiAgICovXG4gIHBvc2l0aW9uOiBQcm9wVHlwZXMub25lT2YoW1Bvc2l0aW9ucy5UT1BfTEVGVCwgUG9zaXRpb25zLlRPUF9SSUdIVCwgUG9zaXRpb25zLkJPVFRPTV9MRUZULCBQb3NpdGlvbnMuQk9UVE9NX1JJR0hUXSksXG5cbiAgLyoqXG4gICAqIFNpemUgb2YgdGhlIFB1bHNhclxuICAgKi9cbiAgc2l6ZTogUHVsc2FyLnByb3BUeXBlcy5zaXplLFxuXG4gIC8qKlxuICAgKiBXZXRoZXIgb3Igbm90IHRoZSBQdWxzYXIvVG9vbHRpcCBpcyBzaG93blxuICAgKi9cbiAgaXNTaG93bjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIENvbnRlbnQgZm9yIHRoZSB0b29sdGlwXG4gICAqL1xuICB0b29sdGlwQ29udGVudDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm5vZGUsIFByb3BUeXBlcy5mdW5jXSksXG5cbiAgLyoqXG4gICAqIENvbnRlbnQgZm9yIHRoZSBwdWxzYXIvdG9vbHRpcCB0byBiZSBhbmNob3JlZCB0b29cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogQ2FsbGVkIHdoZW4gdGhlIFB1bHNhciBpcyBjbGlja2VkXG4gICAqL1xuICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuY1xufVxuIl19
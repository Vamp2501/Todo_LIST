var colorMap = {
  none: {
    base: 'white',
    hover: 'colors.gray75',
    focus: 'colors.gray75',
    active: 'intents.info.background',
    current: 'intents.info.background'
  },
  danger: {
    base: 'intents.danger.background',
    hover: 'intents.danger.background',
    focus: 'colors.red100',
    active: 'colors.red100',
    current: 'colors.red100'
  },
  warning: {
    base: 'intents.warning.background',
    hover: 'intents.warning.background',
    focus: 'colors.orange100',
    active: 'colors.orange100',
    current: 'colors.orange100'
  },
  success: {
    base: 'intents.success.background',
    hover: 'intents.success.background',
    focus: 'colors.green100',
    active: 'colors.green100',
    current: 'colors.green100'
  }
};

var getBackgroundForIntentAndState = function getBackgroundForIntentAndState(intent, state) {
  return colorMap[intent][state];
};

var baseStyle = {
  outline: 'none',
  textDecoration: 'none',
  height: 64,
  _lastOfType: {
    borderBottom: 'none',
    borderBottomLeftRadius: 'radii.1',
    borderBottomRightRadius: 'radii.1'
  },
  _isSelectable: {
    cursor: 'pointer'
  }
};
var appearances = {
  "default": {
    backgroundColor: function backgroundColor(_, props) {
      return getBackgroundForIntentAndState(props.intent, 'base');
    },
    _hover: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'hover');
      }
    },
    _focus: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'focus');
      }
    },
    _active: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'active');
      }
    },
    _current: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'current');
      }
    }
  }
};
export default {
  baseStyle: baseStyle,
  appearances: appearances
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90aGVtZXMvZGVmYXVsdC9jb21wb25lbnRzL3RhYmxlLXJvdy5qcyJdLCJuYW1lcyI6WyJjb2xvck1hcCIsIm5vbmUiLCJiYXNlIiwiaG92ZXIiLCJmb2N1cyIsImFjdGl2ZSIsImN1cnJlbnQiLCJkYW5nZXIiLCJ3YXJuaW5nIiwic3VjY2VzcyIsImdldEJhY2tncm91bmRGb3JJbnRlbnRBbmRTdGF0ZSIsImludGVudCIsInN0YXRlIiwiYmFzZVN0eWxlIiwib3V0bGluZSIsInRleHREZWNvcmF0aW9uIiwiaGVpZ2h0IiwiX2xhc3RPZlR5cGUiLCJib3JkZXJCb3R0b20iLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJfaXNTZWxlY3RhYmxlIiwiY3Vyc29yIiwiYXBwZWFyYW5jZXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJfIiwicHJvcHMiLCJfaG92ZXIiLCJfZm9jdXMiLCJfYWN0aXZlIiwiX2N1cnJlbnQiXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLFFBQVEsR0FBRztBQUNmQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsSUFBSSxFQUFFLE9BREY7QUFFSkMsSUFBQUEsS0FBSyxFQUFFLGVBRkg7QUFHSkMsSUFBQUEsS0FBSyxFQUFFLGVBSEg7QUFJSkMsSUFBQUEsTUFBTSxFQUFFLHlCQUpKO0FBS0pDLElBQUFBLE9BQU8sRUFBRTtBQUxMLEdBRFM7QUFTZkMsRUFBQUEsTUFBTSxFQUFFO0FBQ05MLElBQUFBLElBQUksRUFBRSwyQkFEQTtBQUVOQyxJQUFBQSxLQUFLLEVBQUUsMkJBRkQ7QUFHTkMsSUFBQUEsS0FBSyxFQUFFLGVBSEQ7QUFJTkMsSUFBQUEsTUFBTSxFQUFFLGVBSkY7QUFLTkMsSUFBQUEsT0FBTyxFQUFFO0FBTEgsR0FUTztBQWlCZkUsRUFBQUEsT0FBTyxFQUFFO0FBQ1BOLElBQUFBLElBQUksRUFBRSw0QkFEQztBQUVQQyxJQUFBQSxLQUFLLEVBQUUsNEJBRkE7QUFHUEMsSUFBQUEsS0FBSyxFQUFFLGtCQUhBO0FBSVBDLElBQUFBLE1BQU0sRUFBRSxrQkFKRDtBQUtQQyxJQUFBQSxPQUFPLEVBQUU7QUFMRixHQWpCTTtBQXlCZkcsRUFBQUEsT0FBTyxFQUFFO0FBQ1BQLElBQUFBLElBQUksRUFBRSw0QkFEQztBQUVQQyxJQUFBQSxLQUFLLEVBQUUsNEJBRkE7QUFHUEMsSUFBQUEsS0FBSyxFQUFFLGlCQUhBO0FBSVBDLElBQUFBLE1BQU0sRUFBRSxpQkFKRDtBQUtQQyxJQUFBQSxPQUFPLEVBQUU7QUFMRjtBQXpCTSxDQUFqQjs7QUFrQ0EsSUFBTUksOEJBQThCLEdBQUcsU0FBakNBLDhCQUFpQyxDQUFDQyxNQUFELEVBQVNDLEtBQVQ7QUFBQSxTQUFtQlosUUFBUSxDQUFDVyxNQUFELENBQVIsQ0FBaUJDLEtBQWpCLENBQW5CO0FBQUEsQ0FBdkM7O0FBRUEsSUFBTUMsU0FBUyxHQUFHO0FBQ2hCQyxFQUFBQSxPQUFPLEVBQUUsTUFETztBQUVoQkMsRUFBQUEsY0FBYyxFQUFFLE1BRkE7QUFHaEJDLEVBQUFBLE1BQU0sRUFBRSxFQUhRO0FBS2hCQyxFQUFBQSxXQUFXLEVBQUU7QUFDWEMsSUFBQUEsWUFBWSxFQUFFLE1BREg7QUFFWEMsSUFBQUEsc0JBQXNCLEVBQUUsU0FGYjtBQUdYQyxJQUFBQSx1QkFBdUIsRUFBRTtBQUhkLEdBTEc7QUFXaEJDLEVBQUFBLGFBQWEsRUFBRTtBQUNiQyxJQUFBQSxNQUFNLEVBQUU7QUFESztBQVhDLENBQWxCO0FBZ0JBLElBQU1DLFdBQVcsR0FBRztBQUNsQixhQUFTO0FBQ1BDLElBQUFBLGVBQWUsRUFBRSx5QkFBQ0MsQ0FBRCxFQUFJQyxLQUFKO0FBQUEsYUFBY2hCLDhCQUE4QixDQUFDZ0IsS0FBSyxDQUFDZixNQUFQLEVBQWUsTUFBZixDQUE1QztBQUFBLEtBRFY7QUFHUGdCLElBQUFBLE1BQU0sRUFBRTtBQUNOSCxNQUFBQSxlQUFlLEVBQUUseUJBQUNDLENBQUQsRUFBSUMsS0FBSjtBQUFBLGVBQWNoQiw4QkFBOEIsQ0FBQ2dCLEtBQUssQ0FBQ2YsTUFBUCxFQUFlLE9BQWYsQ0FBNUM7QUFBQTtBQURYLEtBSEQ7QUFPUGlCLElBQUFBLE1BQU0sRUFBRTtBQUNOSixNQUFBQSxlQUFlLEVBQUUseUJBQUNDLENBQUQsRUFBSUMsS0FBSjtBQUFBLGVBQWNoQiw4QkFBOEIsQ0FBQ2dCLEtBQUssQ0FBQ2YsTUFBUCxFQUFlLE9BQWYsQ0FBNUM7QUFBQTtBQURYLEtBUEQ7QUFXUGtCLElBQUFBLE9BQU8sRUFBRTtBQUNQTCxNQUFBQSxlQUFlLEVBQUUseUJBQUNDLENBQUQsRUFBSUMsS0FBSjtBQUFBLGVBQWNoQiw4QkFBOEIsQ0FBQ2dCLEtBQUssQ0FBQ2YsTUFBUCxFQUFlLFFBQWYsQ0FBNUM7QUFBQTtBQURWLEtBWEY7QUFlUG1CLElBQUFBLFFBQVEsRUFBRTtBQUNSTixNQUFBQSxlQUFlLEVBQUUseUJBQUNDLENBQUQsRUFBSUMsS0FBSjtBQUFBLGVBQWNoQiw4QkFBOEIsQ0FBQ2dCLEtBQUssQ0FBQ2YsTUFBUCxFQUFlLFNBQWYsQ0FBNUM7QUFBQTtBQURUO0FBZkg7QUFEUyxDQUFwQjtBQXNCQSxlQUFlO0FBQ2JFLEVBQUFBLFNBQVMsRUFBVEEsU0FEYTtBQUViVSxFQUFBQSxXQUFXLEVBQVhBO0FBRmEsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbG9yTWFwID0ge1xuICBub25lOiB7XG4gICAgYmFzZTogJ3doaXRlJyxcbiAgICBob3ZlcjogJ2NvbG9ycy5ncmF5NzUnLFxuICAgIGZvY3VzOiAnY29sb3JzLmdyYXk3NScsXG4gICAgYWN0aXZlOiAnaW50ZW50cy5pbmZvLmJhY2tncm91bmQnLFxuICAgIGN1cnJlbnQ6ICdpbnRlbnRzLmluZm8uYmFja2dyb3VuZCdcbiAgfSxcblxuICBkYW5nZXI6IHtcbiAgICBiYXNlOiAnaW50ZW50cy5kYW5nZXIuYmFja2dyb3VuZCcsXG4gICAgaG92ZXI6ICdpbnRlbnRzLmRhbmdlci5iYWNrZ3JvdW5kJyxcbiAgICBmb2N1czogJ2NvbG9ycy5yZWQxMDAnLFxuICAgIGFjdGl2ZTogJ2NvbG9ycy5yZWQxMDAnLFxuICAgIGN1cnJlbnQ6ICdjb2xvcnMucmVkMTAwJ1xuICB9LFxuXG4gIHdhcm5pbmc6IHtcbiAgICBiYXNlOiAnaW50ZW50cy53YXJuaW5nLmJhY2tncm91bmQnLFxuICAgIGhvdmVyOiAnaW50ZW50cy53YXJuaW5nLmJhY2tncm91bmQnLFxuICAgIGZvY3VzOiAnY29sb3JzLm9yYW5nZTEwMCcsXG4gICAgYWN0aXZlOiAnY29sb3JzLm9yYW5nZTEwMCcsXG4gICAgY3VycmVudDogJ2NvbG9ycy5vcmFuZ2UxMDAnXG4gIH0sXG5cbiAgc3VjY2Vzczoge1xuICAgIGJhc2U6ICdpbnRlbnRzLnN1Y2Nlc3MuYmFja2dyb3VuZCcsXG4gICAgaG92ZXI6ICdpbnRlbnRzLnN1Y2Nlc3MuYmFja2dyb3VuZCcsXG4gICAgZm9jdXM6ICdjb2xvcnMuZ3JlZW4xMDAnLFxuICAgIGFjdGl2ZTogJ2NvbG9ycy5ncmVlbjEwMCcsXG4gICAgY3VycmVudDogJ2NvbG9ycy5ncmVlbjEwMCdcbiAgfVxufVxuXG5jb25zdCBnZXRCYWNrZ3JvdW5kRm9ySW50ZW50QW5kU3RhdGUgPSAoaW50ZW50LCBzdGF0ZSkgPT4gY29sb3JNYXBbaW50ZW50XVtzdGF0ZV1cblxuY29uc3QgYmFzZVN0eWxlID0ge1xuICBvdXRsaW5lOiAnbm9uZScsXG4gIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gIGhlaWdodDogNjQsXG5cbiAgX2xhc3RPZlR5cGU6IHtcbiAgICBib3JkZXJCb3R0b206ICdub25lJyxcbiAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiAncmFkaWkuMScsXG4gICAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6ICdyYWRpaS4xJ1xuICB9LFxuXG4gIF9pc1NlbGVjdGFibGU6IHtcbiAgICBjdXJzb3I6ICdwb2ludGVyJ1xuICB9XG59XG5cbmNvbnN0IGFwcGVhcmFuY2VzID0ge1xuICBkZWZhdWx0OiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiAoXywgcHJvcHMpID0+IGdldEJhY2tncm91bmRGb3JJbnRlbnRBbmRTdGF0ZShwcm9wcy5pbnRlbnQsICdiYXNlJyksXG5cbiAgICBfaG92ZXI6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogKF8sIHByb3BzKSA9PiBnZXRCYWNrZ3JvdW5kRm9ySW50ZW50QW5kU3RhdGUocHJvcHMuaW50ZW50LCAnaG92ZXInKVxuICAgIH0sXG5cbiAgICBfZm9jdXM6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogKF8sIHByb3BzKSA9PiBnZXRCYWNrZ3JvdW5kRm9ySW50ZW50QW5kU3RhdGUocHJvcHMuaW50ZW50LCAnZm9jdXMnKVxuICAgIH0sXG5cbiAgICBfYWN0aXZlOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IChfLCBwcm9wcykgPT4gZ2V0QmFja2dyb3VuZEZvckludGVudEFuZFN0YXRlKHByb3BzLmludGVudCwgJ2FjdGl2ZScpXG4gICAgfSxcblxuICAgIF9jdXJyZW50OiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IChfLCBwcm9wcykgPT4gZ2V0QmFja2dyb3VuZEZvckludGVudEFuZFN0YXRlKHByb3BzLmludGVudCwgJ2N1cnJlbnQnKVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGJhc2VTdHlsZSxcbiAgYXBwZWFyYW5jZXNcbn1cbiJdfQ==
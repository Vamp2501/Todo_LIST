import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["accountForScrollbar", "children", "className"],
    _excluded2 = ["className", "height"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { memo, useState } from 'react';
import cx from 'classnames';
import PropTypes from 'prop-types';
import { useStyleConfig } from '../../hooks';
import { Pane } from '../../layers';
import ScrollbarSize from './ScrollbarSize';
var emptyObject = {};
var pseudoSelectors = {
  _firstOfType: '&:first-of-type'
};
var internalStyles = {
  display: 'flex',
  flexShrink: 0
};
var TableHead = /*#__PURE__*/memo(function TableHead(props) {
  var _props$accountForScro = props.accountForScrollbar,
      accountForScrollbar = _props$accountForScro === void 0 ? true : _props$accountForScro,
      children = props.children,
      className = props.className,
      rest = _objectWithoutProperties(props, _excluded);

  var _useState = useState(0),
      _useState2 = _slicedToArray(_useState, 2),
      scrollbarWidth = _useState2[0],
      setScrollBarWidth = _useState2[1];

  var _useStyleConfig = useStyleConfig('TableHead', emptyObject, pseudoSelectors, internalStyles),
      themedClassName = _useStyleConfig.className,
      themeHeight = _useStyleConfig.height,
      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);

  var height = rest.height || themeHeight;
  return /*#__PURE__*/React.createElement(Pane, _extends({
    paddingRight: scrollbarWidth,
    className: cx(themedClassName, className),
    height: height
  }, boxProps, rest), children, " ", accountForScrollbar && /*#__PURE__*/React.createElement(ScrollbarSize, {
    handleScrollbarSize: setScrollBarWidth
  }));
});
TableHead.propTypes = _objectSpread(_objectSpread({}, Pane.propTypes), {}, {
  /**
   * The height of the table head.
   */
  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),

  /**
   * This should always be true if you are using TableHead together with a TableBody.
   * Because TableBody has `overflowY: scroll` by default.
   */
  accountForScrollbar: PropTypes.bool
});
export default TableHead;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvVGFibGVIZWFkLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwibWVtbyIsInVzZVN0YXRlIiwiY3giLCJQcm9wVHlwZXMiLCJ1c2VTdHlsZUNvbmZpZyIsIlBhbmUiLCJTY3JvbGxiYXJTaXplIiwiZW1wdHlPYmplY3QiLCJwc2V1ZG9TZWxlY3RvcnMiLCJfZmlyc3RPZlR5cGUiLCJpbnRlcm5hbFN0eWxlcyIsImRpc3BsYXkiLCJmbGV4U2hyaW5rIiwiVGFibGVIZWFkIiwicHJvcHMiLCJhY2NvdW50Rm9yU2Nyb2xsYmFyIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJyZXN0Iiwic2Nyb2xsYmFyV2lkdGgiLCJzZXRTY3JvbGxCYXJXaWR0aCIsInRoZW1lZENsYXNzTmFtZSIsInRoZW1lSGVpZ2h0IiwiaGVpZ2h0IiwiYm94UHJvcHMiLCJwcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJudW1iZXIiLCJzdHJpbmciLCJib29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLElBQWhCLEVBQXNCQyxRQUF0QixRQUFzQyxPQUF0QztBQUNBLE9BQU9DLEVBQVAsTUFBZSxZQUFmO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLFNBQVNDLGNBQVQsUUFBK0IsYUFBL0I7QUFDQSxTQUFTQyxJQUFULFFBQXFCLGNBQXJCO0FBQ0EsT0FBT0MsYUFBUCxNQUEwQixpQkFBMUI7QUFFQSxJQUFNQyxXQUFXLEdBQUcsRUFBcEI7QUFFQSxJQUFNQyxlQUFlLEdBQUc7QUFDdEJDLEVBQUFBLFlBQVksRUFBRTtBQURRLENBQXhCO0FBSUEsSUFBTUMsY0FBYyxHQUFHO0FBQ3JCQyxFQUFBQSxPQUFPLEVBQUUsTUFEWTtBQUVyQkMsRUFBQUEsVUFBVSxFQUFFO0FBRlMsQ0FBdkI7QUFLQSxJQUFNQyxTQUFTLGdCQUFHYixJQUFJLENBQUMsU0FBU2EsU0FBVCxDQUFtQkMsS0FBbkIsRUFBMEI7QUFDL0MsOEJBQXFFQSxLQUFyRSxDQUFRQyxtQkFBUjtBQUFBLE1BQVFBLG1CQUFSLHNDQUE4QixJQUE5QjtBQUFBLE1BQW9DQyxRQUFwQyxHQUFxRUYsS0FBckUsQ0FBb0NFLFFBQXBDO0FBQUEsTUFBOENDLFNBQTlDLEdBQXFFSCxLQUFyRSxDQUE4Q0csU0FBOUM7QUFBQSxNQUE0REMsSUFBNUQsNEJBQXFFSixLQUFyRTs7QUFDQSxrQkFBNENiLFFBQVEsQ0FBQyxDQUFELENBQXBEO0FBQUE7QUFBQSxNQUFPa0IsY0FBUDtBQUFBLE1BQXVCQyxpQkFBdkI7O0FBRUEsd0JBQXlFaEIsY0FBYyxDQUNyRixXQURxRixFQUVyRkcsV0FGcUYsRUFHckZDLGVBSHFGLEVBSXJGRSxjQUpxRixDQUF2RjtBQUFBLE1BQW1CVyxlQUFuQixtQkFBUUosU0FBUjtBQUFBLE1BQTRDSyxXQUE1QyxtQkFBb0NDLE1BQXBDO0FBQUEsTUFBNERDLFFBQTVEOztBQU9BLE1BQU1ELE1BQU0sR0FBR0wsSUFBSSxDQUFDSyxNQUFMLElBQWVELFdBQTlCO0FBRUEsc0JBQ0Usb0JBQUMsSUFBRDtBQUNFLElBQUEsWUFBWSxFQUFFSCxjQURoQjtBQUVFLElBQUEsU0FBUyxFQUFFakIsRUFBRSxDQUFDbUIsZUFBRCxFQUFrQkosU0FBbEIsQ0FGZjtBQUdFLElBQUEsTUFBTSxFQUFFTTtBQUhWLEtBSU1DLFFBSk4sRUFLTU4sSUFMTixHQU9HRixRQVBILE9BT2NELG1CQUFtQixpQkFBSSxvQkFBQyxhQUFEO0FBQWUsSUFBQSxtQkFBbUIsRUFBRUs7QUFBcEMsSUFQckMsQ0FERjtBQVdELENBeEJxQixDQUF0QjtBQTBCQVAsU0FBUyxDQUFDWSxTQUFWLG1DQUlLcEIsSUFBSSxDQUFDb0IsU0FKVjtBQU1FO0FBQ0Y7QUFDQTtBQUNFRixFQUFBQSxNQUFNLEVBQUVwQixTQUFTLENBQUN1QixTQUFWLENBQW9CLENBQUN2QixTQUFTLENBQUN3QixNQUFYLEVBQW1CeEIsU0FBUyxDQUFDeUIsTUFBN0IsQ0FBcEIsQ0FUVjs7QUFXRTtBQUNGO0FBQ0E7QUFDQTtBQUNFYixFQUFBQSxtQkFBbUIsRUFBRVosU0FBUyxDQUFDMEI7QUFmakM7QUFrQkEsZUFBZWhCLFNBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjeCBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgdXNlU3R5bGVDb25maWcgfSBmcm9tICcuLi8uLi9ob29rcydcbmltcG9ydCB7IFBhbmUgfSBmcm9tICcuLi8uLi9sYXllcnMnXG5pbXBvcnQgU2Nyb2xsYmFyU2l6ZSBmcm9tICcuL1Njcm9sbGJhclNpemUnXG5cbmNvbnN0IGVtcHR5T2JqZWN0ID0ge31cblxuY29uc3QgcHNldWRvU2VsZWN0b3JzID0ge1xuICBfZmlyc3RPZlR5cGU6ICcmOmZpcnN0LW9mLXR5cGUnXG59XG5cbmNvbnN0IGludGVybmFsU3R5bGVzID0ge1xuICBkaXNwbGF5OiAnZmxleCcsXG4gIGZsZXhTaHJpbms6IDBcbn1cblxuY29uc3QgVGFibGVIZWFkID0gbWVtbyhmdW5jdGlvbiBUYWJsZUhlYWQocHJvcHMpIHtcbiAgY29uc3QgeyBhY2NvdW50Rm9yU2Nyb2xsYmFyID0gdHJ1ZSwgY2hpbGRyZW4sIGNsYXNzTmFtZSwgLi4ucmVzdCB9ID0gcHJvcHNcbiAgY29uc3QgW3Njcm9sbGJhcldpZHRoLCBzZXRTY3JvbGxCYXJXaWR0aF0gPSB1c2VTdGF0ZSgwKVxuXG4gIGNvbnN0IHsgY2xhc3NOYW1lOiB0aGVtZWRDbGFzc05hbWUsIGhlaWdodDogdGhlbWVIZWlnaHQsIC4uLmJveFByb3BzIH0gPSB1c2VTdHlsZUNvbmZpZyhcbiAgICAnVGFibGVIZWFkJyxcbiAgICBlbXB0eU9iamVjdCxcbiAgICBwc2V1ZG9TZWxlY3RvcnMsXG4gICAgaW50ZXJuYWxTdHlsZXNcbiAgKVxuXG4gIGNvbnN0IGhlaWdodCA9IHJlc3QuaGVpZ2h0IHx8IHRoZW1lSGVpZ2h0XG5cbiAgcmV0dXJuIChcbiAgICA8UGFuZVxuICAgICAgcGFkZGluZ1JpZ2h0PXtzY3JvbGxiYXJXaWR0aH1cbiAgICAgIGNsYXNzTmFtZT17Y3godGhlbWVkQ2xhc3NOYW1lLCBjbGFzc05hbWUpfVxuICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICB7Li4uYm94UHJvcHN9XG4gICAgICB7Li4ucmVzdH1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59IHthY2NvdW50Rm9yU2Nyb2xsYmFyICYmIDxTY3JvbGxiYXJTaXplIGhhbmRsZVNjcm9sbGJhclNpemU9e3NldFNjcm9sbEJhcldpZHRofSAvPn1cbiAgICA8L1BhbmU+XG4gIClcbn0pXG5cblRhYmxlSGVhZC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgUGFuZSBjb21wb25lbnQgYXMgdGhlIGJhc2UuXG4gICAqL1xuICAuLi5QYW5lLnByb3BUeXBlcyxcblxuICAvKipcbiAgICogVGhlIGhlaWdodCBvZiB0aGUgdGFibGUgaGVhZC5cbiAgICovXG4gIGhlaWdodDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBUaGlzIHNob3VsZCBhbHdheXMgYmUgdHJ1ZSBpZiB5b3UgYXJlIHVzaW5nIFRhYmxlSGVhZCB0b2dldGhlciB3aXRoIGEgVGFibGVCb2R5LlxuICAgKiBCZWNhdXNlIFRhYmxlQm9keSBoYXMgYG92ZXJmbG93WTogc2Nyb2xsYCBieSBkZWZhdWx0LlxuICAgKi9cbiAgYWNjb3VudEZvclNjcm9sbGJhcjogUHJvcFR5cGVzLmJvb2xcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFibGVIZWFkXG4iXX0=